[trainer]
#name of the trainer that should be used
trainer = standard
#the loss function to be minimized
#loss = cross_entropy
loss = average_cross_entropy
#the amount of training labels that need to be added to the output
trainlabels = 0
#link the input names defined in the classifier config to sections defined in
#the database config
features = trainfbank
#a space seperated list of target names used by the trainer
targets = alignments
#a mapping between the target names and database sections
alignments = trainalignments
#if set to True training will resume from latest checkpoint
resume_training = False
#number of passes over the entire database
num_epochs = 4
#initial learning rate of the neural net
initial_learning_rate = 1e-3
#exponential weight decay parameter
learning_rate_decay = 0.1
#size of the minibatch (#utterances)
batch_size = 256
#you can cut a batch of sequences to equal length parts, this is the length of
#those parts, set to 0 for not cutting the data
cut_sequence_length = 0
#number of minibatches to aggregate before updating the parameters if 0
#asstnchronous training will be done
numbatches_to_aggregate = 0
#the data will be divided into buckets according to sequence length, this
#setting determines the number of buckets to use. For no bucketing set to 1
numbuckets = 16
# bool, change batch size from bucket to bucket, for buckets with higher
#seq_length a smaller batch size is used
variable_batch_size = True

###VALIDATION PART###
#frequency of evaluating the validation set.
valid_frequency = 1000
#if you want to adapt the learning rate based on the validation set, set to True
valid_adapt = False
#if you want to go back in training if validation performance is worse set to True
go_back = False
#the number of times validation performance can be worse before terminating training, set to None to disable early stopping
num_tries = 10
#set to True if you want to reset the number of tries if the validation performance is better
reset_tries = True
